# create a dockerfile to containerize my golang gin based api project

# Start from the latest golang base image
FROM golang:1.22 AS build-stage

WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source code into the container
COPY . .

# Build the go gin app in release mode
ENV GIN_MODE=release
RUN go build -o passbook-app /cmd/passbook-app/main.go

# Start a new stage from alpine linux
FROM alpine:latest

# Copy the pre-built binary from the previous stage
COPY --from=build-stage /app/passbook-app .

# Expose port 8080 to the outside world
EXPOSE 8080

# Command to run the executable
CMD ["./passbook-app"]

